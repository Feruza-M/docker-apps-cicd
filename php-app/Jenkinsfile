pipeline {
    agent any

    parameters {
        choice(name: 'DEPLOY_ENV', choices: ['dev', 'stage', 'prod'])
        string(name: 'EXTERNAL_PORT', defaultValue: '8086')
        string(name: 'INTERNAL_PORT', defaultValue: '8080')
    }

    environment {
        NETWORK_NAME = "php-app-net"
        IMAGE_NAME   = "docferuza2024/php-app"
        APP_NAME     = "PHP App with MySQL"
        APP_PORT     = "8086"
        DB_CONTAINER = "mysql-db"
        DB_NAME      = "appdb"
        DB_USER      = "appuser"
        DB_PASS      = "password"
    }

    stages {
        stage('Build Docker Image') {
            steps {
                sh "docker build -t ${IMAGE_NAME}:1.0.0 ./php-app"
            }
        }

        stage('Push Docker Image') {
            steps {
                withDockerRegistry([ credentialsId: 'docker-hub', url: '' ]) {
                    sh "docker push ${IMAGE_NAME}:1.0.0"
                }
            }
        }

        stage('Prepare Network') {
            steps {
                sh "docker network create ${NETWORK_NAME} || true"
            }
        }

        stage('Deploy MySQL') {
            steps {
                sh "docker rm -f ${DB_CONTAINER} || true"
                sh """
                docker run -d --name ${DB_CONTAINER} \
                    --network ${NETWORK_NAME} \
                    -e MYSQL_ROOT_PASSWORD=rootpassword \
                    -e MYSQL_DATABASE=${DB_NAME} \
                    -e MYSQL_USER=${DB_USER} \
                    -e MYSQL_PASSWORD=${DB_PASS} \
                    -v mysql-data:/var/lib/mysql \
                    mysql:8.0
                """
            }
        }

        stage('Deploy PHP App') {
            steps {
                sh "docker rm -f php-app || true"
                sh """
                docker run -d --name php-app \
                    --network ${NETWORK_NAME} \
                    -p ${APP_PORT}:80 \
                    -e APP_NAME="${APP_NAME}" \
                    -e ENVIRONMENT=dev \
                    -e VERSION=1.0.0 \
                    -e DB_HOST=${DB_CONTAINER} \
                    -e DB_NAME=${DB_NAME} \
                    -e DB_USER=${DB_USER} \
                    -e DB_PASS=${DB_PASS} \
                    ${IMAGE_NAME}:1.0.0
                """
            }
        }

        stage('Check App') {
            steps {
                sh "sleep 20"
                sh "curl -f http://localhost:${APP_PORT}"
            }
        }
    }

    post {
        always {
            echo "Pipeline finished."
        }
    }
}
